DROP DATABASE IF EXISTS testing;
CREATE DATABASE testing;
USE testing;

CREATE TABLE users(
	user_id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(50),
    email VARCHAR(50),
    password VARCHAR(50)
);
CREATE TABLE food_type(
	type_id INT PRIMARY KEY AUTO_INCREMENT,
	type_name VARCHAR(250)
);
CREATE TABLE food(
	food_id INT PRIMARY KEY AUTO_INCREMENT,
    food_name VARCHAR(50),
    image VARCHAR(50),
	price FLOAT,
    descr VARCHAR(50),
    type_id INT,
    FOREIGN KEY (type_id) REFERENCES food_type(type_id)
);
CREATE TABLE restaurant(
	res_id INT PRIMARY KEY AUTO_INCREMENT,
    res_name VARCHAR(100),
    image VARCHAR(200),
    descr VARCHAR(200)
);
CREATE TABLE like_res(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	user_id INT NOT NULL,
    res_id INT NOT NULL,
    date_like DATETIME,
	FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);
CREATE TABLE rate_res(
	user_id INT NOT NULL,
    res_id INT NOT NULL,
    amount INT NOT NULL,
    date_time DATETIME,
    FOREIGN KEY (user_id)  REFERENCES users(user_id),
	FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);
CREATE TABLE orders(
	order_id INT PRIMARY KEY AUTO_INCREMENT,
	user_id INT,
    food_id INT,
    amount INT,
    codee VARCHAR(50),
    arr_sub_id VARCHAR(50),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (food_id) REFERENCES food(food_id)
);
CREATE TABLE sub_food(
	sub_int INT PRIMARY KEY AUTO_INCREMENT,
    sub_name VARCHAR(100),
    sub_price FLOAT,
    food_id INT,
	FOREIGN KEY (food_id) REFERENCES food(food_id)
);

INSERT INTO users (full_name, email, password) VALUES
('John Doe', 'john.doe@example.com', 'password123'),
('Jane Smith', 'jane.smith@example.com', 'password456'),
('Bob Johnson', 'bob.johnson@example.com', 'password789'),
('Sarah Lee', 'sarah.lee@example.com', 'passwordabc'),
('Michael Chen', 'michael.chen@example.com', 'passworddef'),
('Jane Lee', 'jane.lee@example.com', 'abc123'),
('NObi ta', 'jane.lee@example.com', 'abc123'),
('Canada', 'jane.lee@example.com', 'abc123'),
('Mike Brown', 'mike.brown@example.com', 'p@ssword!');
INSERT INTO restaurant (res_name, image, descr) VALUES
('Pizza Palace', 'https://example.com/pizza.jpg', 'The best pizza in town'),
('Burger Joint', 'https://example.com/burger.jpg', 'Home of the famous Big Burger'),
('Taco Hut', 'https://example.com/taco.jpg', 'Tacos, burritos, and more!'),
('Sushi Station', 'https://example.com/sushi.jpg', 'Fresh sushi made to order'),
('Lẩu cay', 'https://example.com/laucau.jpg', 'Fresh sushi made to order'),
('Steakhouse', 'https://example.com/steak.jpg', 'Juicy steaks cooked to perfection');
INSERT INTO like_res (user_id, res_id, date_like) VALUES
(1, 1, '2022-01-01 12:00:00'),
(1, 2, '2022-01-02 13:00:00'),
(2, 1, '2022-01-03 14:00:00'),
(3, 3, '2022-01-04 15:00:00'),
(3, 5, '2022-01-04 15:00:00'),
(3, 4, '2022-01-05 16:00:00'),
(3, 5, '2022-01-06 17:00:00'),
(4, 2, '2022-01-07 18:00:00'),
(4, 4, '2022-01-08 19:00:00'),
(5, 1, '2022-01-09 20:00:00'),
(5, 3, '2022-01-10 21:00:00'),
(5, 5, '2022-01-10 21:00:00'),
(5, 5, '2022-01-11 22:00:00'),
(7, 5, '2022-01-11 22:00:00');
INSERT INTO food_type (type_name) VALUES ('Pizza'), ('Burger'), ('Taco'), ('Sushi'), ('Steak');
INSERT INTO food (food_name, image, price, descr, type_id) VALUES
('Pizza', 'https://example.com/pizza.jpg', 10.99, 'Pepperoni pizza with extra cheese', 1),
('Burger', 'https://example.com/burger.jpg', 8.99, 'Juicy beef burger with lettuce and tomato', 2),
('Taco', 'https://example.com/taco.jpg', 2.99, 'Spicy ground beef taco with sour cream', 3),
('Sushi', 'https://example.com/sushi.jpg', 12.99, 'Fresh salmon nigiri with wasabi and soy sauce', 4),
('Steak', 'https://example.com/steak.jpg', 19.99, 'Grilled ribeye steak with garlic butter', 5);
INSERT INTO orders (user_id, food_id, amount, codee, arr_sub_id) VALUES
(1, 1, 2, 'ABCD1234', 'SUB-1234'),
(2, 2, 1, 'EFGH5678', 'SUB-5678'),
(3, 3, 3, 'IJKL9012', 'SUB-9012'),
(4, 4, 2, 'MNOP3456', 'SUB-3456'),
(5, 5, 1, 'QRST7890', 'SUB-7890'),
(1, 2, 1, 'UVWX1234', 'SUB-2341'),
(2, 3, 2, 'YZAB5678', 'SUB-5678'),
(3, 4, 1, 'CDEF9012', 'SUB-1290'),
(4, 5, 3, 'GHIJ3456', 'SUB-4563'),
(5, 3, 2, 'KLMN7890', 'SUB-7891'),
(5, 4, 2, 'KLMN7890', 'SUB-7891'),
(5, 1, 2, 'KLMN7890', 'SUB-7891');
INSERT INTO sub_food (sub_name, sub_price, food_id) VALUES
('Extra Cheese', 1.50, 1),
('Extra Toppings', 2.00, 1),
('Large Size', 2.50, 1),
('Bacon', 1.00, 2),
('Avocado', 2.00, 2),
('Fries', 3.00, 2),
('Sour Cream', 0.50, 2),
('Guacamole', 1.50, 2),
('Extra Salsa', 1.00, 3),
('Tempura Shrimp', 2.50, 4),
('Salmon Roe', 3.00, 4),
('Spicy Tuna', 1.50, 4),
('Garlic Butter', 2.00, 5),
('Mushroom Sauce', 1.50, 5),
('Red Wine Reduction', 2.50, 5);
INSERT INTO rate_res (user_id, res_id, amount, date_time) VALUES
(1, 1, 4, '2022-03-20 10:15:00'),
(2, 1, 3, '2022-03-22 12:30:00'),
(3, 1, 5, '2022-03-23 08:45:00'),
(4, 1, 2, '2022-03-25 17:20:00'),
(5, 1, 4, '2022-03-25 19:40:00'),
(1, 2, 5, '2022-03-19 14:10:00'),
(2, 2, 3, '2022-03-20 11:30:00'),
(3, 2, 2, '2022-03-23 16:00:00'),
(4, 2, 4, '2022-03-24 09:15:00'),
(5, 2, 5, '2022-03-25 22:00:00'),
(1, 3, 4, '2022-03-21 13:00:00'),
(2, 3, 3, '2022-03-23 19:30:00'),
(3, 3, 4, '2022-03-25 10:45:00'),
(4, 3, 5, '2022-03-26 12:15:00'),
(5, 3, 2, '2022-03-27 14:20:00');

-- tìm 5 người like nhà hàng nhiều nhất
SELECT users.full_name, COUNT(like_res.user_id) AS user_like_count
FROM users
JOIN like_res ON users.user_id = like_res.user_id
GROUP BY users.user_id
ORDER BY user_like_count DESC
LIMIT 5;

-- tìm 2 nhà hàng được like nhiều nhất
SELECT restaurant.res_name, COUNT(like_res.res_id) AS res_like_count
FROM restaurant
JOIN like_res ON restaurant.res_id = like_res.res_id
GROUP BY restaurant.res_id
ORDER BY res_like_count DESC
LIMIT 2;

-- Tìm người đã đặt hàng nhiều nhất
SELECT users.full_name, COUNT(*) as orders_count 
FROM users
JOIN orders ON users.user_id = orders.user_id
GROUP BY users.user_id
ORDER BY orders_count DESC
LIMIT 1;

-- Tìm người dùng ko hoạt động trong hệ thông ( ko like, ko đánh giá, k đặt hàng )
SELECT users.user_id, users.full_name
FROM users
LEFT JOIN orders ON users.user_id = orders.user_id
LEFT JOIN like_res ON users.user_id = like_res.user_id
LEFT JOIN rate_res ON users.user_id = rate_res.user_id
WHERE orders.user_id IS NULL AND rate_res.user_id IS NULL AND like_res.user_id IS NULL;

-- Tính trung bình sub_food của 1 foood
SELECT AVG(sub_price) AS avg_sub_food
FROM sub_food
WHERE food_id = 2;
 
